<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<link rel="stylesheet"
	href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.1/font/bootstrap-icons.css">


<script type="text/javascript">
	var datagrid = tui.Grid;
	var dummyData = [];

	var datagridFile;
	var dummyDataFile = [];

	var datagridFileEdit;
	var dummyDataFileEdit = [];

	$(document)
			.ready(
					function() {

						//sheet 높이 자동 조절
						$(window).resize(function() {
							$('#div_notice').height($(window).height() - 260);
						}).resize();

						// 공지사항 목록 그리드
						createElements();
						getNoticeData();

						// 조회
						$('#btnSearch').click(function() {
							getNoticeData();
						});

						// 등록
						$('#btnReg').click(function() {
							// 신규등록 구분자 I
							insertPop("I");
						});

						// 게시글 저장
						$('#btn-save').click(function() {
							// 파일 업로드
							saveNoticeData2();
						});

						// 작성일
						$('#crt_dt').datepicker(
								{
									dateFormat : 'yy-mm-dd',
									showMonthAfterYear : true,
									changeYear : true,
									changeMonth : true,
									monthNamesShort : [ '1월', '2월', '3월', '4월',
											'5월', '6월', '7월', '8월', '9월',
											'10월', '11월', '12월' ],
									dayNamesMin : [ '일', '월', '화', '수', '목',
											'금', '토' ]
								});

						// 수정
						$('#btnEdit').click(function() {
							editNoticeData();
						});

						// 삭제
						$('#btnDelete').click(function() {
							deleteNoticeData();
						});

						// file select btn
						$('#file_sel_btn')
								.click(
										function(e) {
											e.preventDefault();
											var fileIndex = $("input[name='file_input']").length;
											var vHtml = '<span id="file_sel_'+ fileIndex +'" >';

											vHtml += '<br/>'
											vHtml += '<input class="form-control-file" type="file" name="file_input" id="file_input_' + fileIndex + '">';
											vHtml += '<button type="button" id="btn-file-sel-del" class="btn-xs btn-outline-primary" onClick="file_sel_remove('
													+ fileIndex
													+ ')">x</button>';

											$('#file_sel_div').append(vHtml);
										});

					});

	// 게시글 저장(insert, update, fileUpload)
	function saveNoticeData2() {
		var fc = datagrid.getFocusedCell();
		var rowkey = Object.values(fc)[0];
		var cid = datagrid.getRow(rowkey);
		var formData = new FormData();
		var inputIndex = $("input[name='file_input']").length;
		var board_id = '';
		var file_grp_id = '';

		// update일때 board_id, file_grp_id 값
		if ($('#gb').val() == 'U') {
			board_id = cid.board_id;
			cid.file_grp_id;
		}

		formData.append('title', $('#titleInput').val());
		formData.append('board_contents', $('#contentInput').val());
		formData.append('board_id', board_id + "");
		formData.append('gb', $('#gb').val());
		formData.append('file_grp_id', file_grp_id);

		for (var i = 0; i < inputIndex; i++) {
			var files = $('#file_input_' + i).prop('files')[0];

			formData.append('files', files);
		}

		if ($('#titleInput').val() == '') {
			alert('제목을 입력해주세요.');
			return;
		} else if ($('#contentInput').val() == '<p><br></p>') {
			alert('내용을 입력해주세요.');
			return;
		} else {
			$.ajax({
				url : "<c:url value='/admin/saveNoticeData2' />",
				type : 'POST',
				data : formData,
				processData : false,
				contentType : false,
				enctype : 'multipart/form-data',
				success : function(data) {
					if (data.result == 'ok') {
						alert('저장 되었습니다.');
						$('#insertPop').dialog('close');
						getFileList();
					} else {
						alert('저장에 실패하였습니다.');
						console.log(data);
					}

				},
				error : function(xhr, ajaxOptions, thrownError) {
					alert(xhr.status + ' Error');
				}
			});
		}

	}

	// 공지사항 조회 그리드 틀
	function createElements() {

/* 		datagrid.applyTheme('custom', {
			row : {
				hover : {
					background : '#d4e9f2'
				}
			}
		}); */

		datagrid = tuiGrid.createGrid({
			gridId : 'div_notice',
			paging : true,
			background : '#000000',
			rowPerPage : 25,
			readOnlyColorFlag : false,
			rowHeaders : [ 'rowNum' ],
			columns : [ {
				header : '제목',
				name : 'title',
				align : 'left',
				width : 700
			}, {
				header : '조회수',
				name : 'view_cnt',
				align : 'center'
			}, {
				header : '생성일',
				name : 'crt_dt',
				align : 'center',
				width : 200
			}, {
				header : '생성자',
				name : 'crt_user',
				align : 'center'
			}, {
				header : '수정일',
				name : 'upd_dt',
				align : 'center',
				width : 300
			}, {
				header : '수정자',
				name : 'upd_user',
				align : 'center'
			}, {
				header : '게시판 구분',
				name : 'board_gb',
				hidden : true
			}, {
				header : '게시판 ID',
				name : 'board_id',
				hidden : true
			}, {
				header : '파일그룹 ID',
				name : 'file_grp_id',
				hidden : true
			}, ]

		}, [],//초기 데이터
		//이벤트
		{
			celldblclick : function(rowKey, colName, grid) {
				
				var title = grid.getValue(rowKey,"title");
				var board_contents = grid.getValue(rowKey,"board_contents");
				var board_id = grid.getValue(rowKey,"board_id")
				
				$('#noticePop').dialog({
					title : '공지사항',
					modal : true,
					width : '1000',
					height : $(window).height() - 110,
					close : function(event, ui) {
						getNoticeData();
					}
				});

				$('#notice-content').summernote({
					height : 320,
					lang : "ko-KR"
				});

				$('#noticeTitle').html(title);
				$('#noticeContent').summernote('code', board_contents);
				$('#noticeContent').html(board_contents);
				$('.note-toolbar').hide();

				$('#noticeContent').summernote('disable');

				// 조회수 update
				updateViewCount(board_id);

				// 파일 목록 리스트
				//createFileElements();
				getFileList();
			}

		});
	}
	/*
	let gridOptions = {
			properties : {
				parentid 		 : 'div_notice',
				id 				 : 'datagrid',
				width 			 : '100%',
				height 			 : '100%',
				jsonref 		 : 'dummyData',
				rowheader 		 : ['seq'],
				rowheadercaption : {seq : 'No'},
				rowheaderwidth   : {seq : '30'},
				emptyrecords 	 : '조회된 데이터가 없습니다.',
				paging 			 : {'type': 'all', 'count': 10, 'size': 25},
				columns 		 : [
					{caption	 : ['제목'], ref: 'title', type: 'output', width: '40%', style: 'text-align: left'},
					{caption 	 : ['조회수'], ref: 'view_cnt', type: 'output', width: '10%', style: 'text-align: center'},
					{caption 	 : ['생성일'], ref: 'crt_dt', type: 'output', width: '15%', style: 'text-align: center'},
					{caption 	 : ['생성자'], ref: 'crt_user', type: 'output',  width: '10%', style: 'text-align: center'},
					{caption 	 : ['수정일'], ref: 'upd_dt', type: 'output', width: '15%', style: 'text-align: center'},
					{caption 	 : ['수정자'], ref: 'upd_user', type: 'output', width: '10%', style: 'text-align: center'},
					{caption 	 : ['게시판 구분'], ref: 'board_gb', type: 'output', hidden: true},
					{caption 	 : ['게시판 ID'], ref: 'board_id', type: 'output', hidden: true},
					{caption 	 : ['파일그룹 ID'], ref: 'file_grp_id', type: 'output', hidden: true},
				]
			},
			event : {
				
			}
	}
	
	datagrid = sbCom.createGrid(gridOptions);
	
	 */

	/*
	// 목록 row 더블클릭시 게시글 조회
	datagrid.bind("dblclick", function(){
		
		$('#noticePop').dialog({
			title  : '공지사항',
			modal  : true,
			width  : '1000',
			height : $(window).height()-110,
			close  : function(event, ui){
				getNoticeData();
			}
		});
	 */

	// 		$('#notice-content').summernote({
	// 			height : 320,
	// 			lang   : "ko-KR"
	// 		});
	//		$('#noticeTitle').html(datagrid.getRowData(datagrid.getRow()).title);
	// 		$('#noticeContent').summernote('code', datagrid.getRowData(datagrid.getRow()).board_contents);
	//		$('#noticeContent').html(datagrid.getRowData(datagrid.getRow()).board_contents);
	// 		$('.note-toolbar').hide();
	// 		$('#noticeContent').summernote('disable');
	// 조회수 update
	//	updateViewCount();
	// 파일 목록 리스트
	// 		createFileElements();
	//	getFileList();
	// 공지사항 목록 조회
	function getNoticeData() {

		var param = JSON.stringify({
			title : $('#input_title').val(),
			crt_dt : $('#crt_dt').val()
		});

		$.ajax({
			url : "<c:url value='/admin/getNoticeData' />",
			type : 'POST',
			data : param,
			contentType : 'application/json;charset=UTF-8',
			dataType : 'json',
			success : function(data) {
				// data refresh true
				datagrid.resetData(data);
				//			datagrid.setGridData(data, true);
				//			datagrid.rebuild();
			},
			// loading img
			beforeSend : function() {
				//			datagrid.lockGrid(); 
			},
			// loading img unload
			complete : function() {
				//			datagrid.lockGrid(false); 
			},
			error : function(xhr, ajaxOptions, thrownError) {
				alert(xhr.status + ' Error');
			}
		});

	}

	// enter로 조회
	$(document).on('keypress', '#searchRow', function(e) {

		if (e.keyCode == '13') {
			e.preventDefault();
			getNoticeData();
		}

	});

	// 신규 게시글 등록 pop 호출
	function insertPop(edit_gb) {

		var fileIndex = $("input[name='file_input']").length;

		// 파일 선택란 삭제
		for (var i = 0; i < fileIndex; i++)
			$('#file_sel_' + i).remove();

		// 등록, 수정 시 toolbar 보이기
		$('.note-toolbar').show();

		$('#insertPop').dialog({
			title : '공지사항',
			modal : true,
			width : '1000',
			height : $(window).height() - 40,
			close : function(event, ui) {
				getNoticeData();
			}
		});

		$('#contentInput')
				.summernote(
						{
							height : 320,
							lang : "ko-KR",
							toolbar : [
									// [그룹메뉴, [버튼 나열]]
									[
											'style',
											[ 'bold', 'italic', 'underline',
													'clear' ] ],
									[
											'font',
											[ 'strikethrough', 'superscript',
													'subscript' ] ],
									[ 'fontsize', [ 'fontsize' ] ],
									[ 'color', [ 'color' ] ],
									[ 'para', [ 'ul', 'ol', 'paragraph' ] ],
									[ 'height', [ 'height' ] ] ]
						});

		$('#titleInput').val('');
		$('#contentInput').summernote('reset');

		$('#gb').val(edit_gb);

		if (edit_gb == 'U') { // 게시글 수정일때 첨부파일 목록
			// 		createFileElementsEdit();
			getFileList();
		} else {
	 		$('#file_list_div_edit').remove();
		}

	}

	// 게시글 삭제
	function deleteNoticeData() {
		var fc = datagrid.getFocusedCell();
		var rowkey = Object.values(fc)[0];
		var cid = datagrid.getRow(rowkey);
		var param = JSON.stringify({
			board_id : cid.board_id
		});

		if (confirm('게시글을 삭제 하시겠습니까?')) {

			$.ajax({
				url : "<c:url value='/admin/deleteNoticeData' />",
				type : 'POST',
				data : param,
				contentType : 'application/json;charset=UTF-8',
				dataType : 'json',
				success : function(data) {
					if (data.result == 'ok') {
						alert('삭제 되었습니다.');
						$('#noticePop').dialog('close');
						getNoticeData();
					} else {
						alert('정상적으로 처리되지 않았습니다.');
					}
				},
				error : function(xhr, ajaxOptions, thrownError) {
					alert(xhr.status + ' Error');
				}
			});
		}
	}

	// 게시글 수정
	function editNoticeData() {

		// 조회 pop(noticePop) 닫기
		$('#noticePop').dialog('destroy');

		// 등록 pop(insertPop) 열기, 수정 구분자 U
		insertPop("U");

		// 데이터 바인딩
		var fc = datagrid.getFocusedCell();
		var rowkey = Object.values(fc)[0];
		var cid = datagrid.getRow(rowkey);

		$('#titleInput').val(cid.title);
		$('#contentInput').summernote('code', cid.board_contents);

	}

	// 조회수 update
	function updateViewCount(board_id) {
		var param = JSON.stringify({
			board_id : board_id
		});

		$.ajax({
			url : "<c:url value='/admin/updateViewCount' />",
			type : 'POST',
			data : param,
			// 		dataType	: 'json',
			contentType : 'application/json;charset=UTF-8',
			error : function(xhr, ajaxOptions, thrownError) {
				alert(xhr.status + ' Error');
			}
		});
	}

	//파일 선택 삭제
	function file_sel_remove(idx) {
		$('#file_sel_' + idx).remove();
	}

	// 파일 리스트 조회 그리드
	function createFileElements() {

		datagridFile = tuiGrid.createGrid({
			gridId : 'file-list-div',
			paging : true,
			background : '#000000',
			rowPerPage : 25,
			rowHeaders : [ 'rowNum' ],
			columns : [ {
				header : '파일명',
				name : 'file_nm',
				align : 'left',
				width : 700
			}, {
				header : '확장자',
				name : 'file_ext',
				align : 'center'
			}, {
				header : '업로드 일자',
				name : 'crt_dt',
				align : 'center',
				width : 200
			}, {
				header : '생성자',
				name : 'crt_user',
				align : 'center'
			}, {
				header : '파일 ID',
				name : 'file_id',
				align : 'center',
				width : 300
			}, {
				header : '다운로드',
				name : 'download_img',
				align : 'center'
			} ]

		}, [],//초기 데이터
		//이벤트
		{

		});

		/*
		let gridOptions = {
			properties : {
				parentid : 'file-list-div',
				id : 'datagridFile',
				width : '100%',
				height : '80px',
				jsonref : 'dummyDataFile',
				rowheader : [ 'seq' ],
				rowheadercaption : {
					seq : 'No'
				},
				rowheaderwidth : {
					seq : '30'
				},
				emptyrecords : '업로드된 파일이 없습니다.',
				columns : [
						{
							caption : [ '파일명' ],
							ref : 'file_nm',
							type : 'output',
							width : '30%',
							style : 'text-align: center'
						},
						{
							caption : [ '확장자' ],
							ref : 'file_ext',
							type : 'output',
							hidden : true
						},
						{
							caption : [ '업로드 일자' ],
							ref : 'crt_dt',
							type : 'output',
							width : '30%',
							style : 'text-align: center'
						},
						{
							caption : [ '생성자' ],
							ref : 'crt_user',
							type : 'output',
							width : '30%',
							style : 'text-align: center'
						},
						{
							caption : [ '파일 ID' ],
							ref : 'file_id',
							type : 'output',
							hidden : true
						},
						{
							caption : [ '다운로드' ],
							ref : 'download_img',
							type : 'output',
							width : '10%',
							style : 'text-align: center',
							renderer : function(objGrid, nRow, nCol, strValue,
									objRowData) {
								// download icon
								var html = '<i class="bi bi-download" style="cursor:pointer;" onclick="fileDownload()"></i>';
								return html;
							}
						} ]
			},
			event : {

			}
		}

		datagridFile = SbGrid.createGrid(gridOptions);
		 */
	}

	function createFileElementsEdit() {
		datagridFile = tuiGrid.createGrid({
			gridId : 'file_list_div_edit',
			paging : true,
			background : '#000000',
			rowPerPage : 25,
			rowHeaders : [ 'rowNum' ],
			columns : [ {
				header : '파일명',
				name : 'file_nm',
				align : 'left',
				width : 700
			}, {
				header : '확장자',
				name : 'file_ext',
				align : 'center'
			}, {
				header : '업로드 일자',
				name : 'crt_dt',
				align : 'center',
				width : 200
			}, {
				header : '생성자',
				name : 'crt_user',
				align : 'center'
			}, {
				header : '파일 ID',
				name : 'file_id',
				align : 'center',
				width : 300
			}, {
				header : '삭제',
				name : 'del_chk',
				align : 'center'
			} ]

		}, [],//초기 데이터
		//이벤트
		{

		});

		/*
		let gridOptions = {
			properties : {
				parentid : 'file_list_div_edit',
				id : 'datagridFileEdit',
				width : '100%',
				height : '80px',
				jsonref : 'dummyDataFileEdit',
				rowheader : [ 'seq' ],
				rowheadercaption : {
					seq : 'No'
				},
				rowheaderwidth : {
					seq : '30'
				},
				emptyrecords : '업로드된 파일이 없습니다.',
				columns : [
						{
							caption : [ '파일명' ],
							ref : 'file_nm',
							type : 'output',
							width : '30%',
							style : 'text-align: center'
						},
						{
							caption : [ '확장자' ],
							ref : 'file_ext',
							type : 'output',
							hidden : true
						},
						{
							caption : [ '업로드 일자' ],
							ref : 'crt_dt',
							type : 'output',
							width : '30%',
							style : 'text-align: center'
						},
						{
							caption : [ '생성자' ],
							ref : 'crt_user',
							type : 'output',
							width : '30%',
							style : 'text-align: center'
						},
						{
							caption : [ '파일 ID' ],
							ref : 'file_id',
							type : 'output',
							hidden : true
						},
						{
							caption : [ '삭제' ],
							ref : 'del_chk',
							type : 'output',
							width : '10%',
							style : 'text-align: center',
							renderer : function(objGrid, nRow, nCol, strValue,
									objRowData) {
								// download icon
								var html = '<i class="bi bi-trash" style="cursor:pointer;" onclick="deleteFile()"></i>';
								return html;
							}
						} ]
			},
			event : {

			}
		}

		datagridFileEdit = tuiGrid.createGrid(gridOptions);
		 */
	}

	// 파일 삭제
	function deleteFile() {
		var fc = datagrid.getFocusedCell();
		var rowkey = Object.values(fc)[0];
		var cid = datagrid.getRow(rowkey);
		var param = JSON.stringify({
			file_id : cid.file_id
		});

		if (confirm('삭제 하시겠습니까?')) {
			$.ajax({
				url : "<c:url value='/admin/deleteFile' />",
				type : 'POST',
				data : param,
				contentType : 'application/json;charset=UTF-8',
				dataType : 'json',
				success : function(data) {

					if (data.result == 'ok') {
						alert('삭제 되었습니다.');
						getFileList();
					}

				},
				error : function(xhr, ajaxOptions, thrownError) {
					alert(xhr.status + ' Error');
				}
			});
		}

	}

	// 파일 리스트 목록
	function getFileList() {
		var fc = datagrid.getFocusedCell();
		var rowkey = Object.values(fc)[0];
		var cid = datagrid.getRow(rowkey);
		var gb = $('#gb').val();

		$.ajax({
					url : "<c:url value='/admin/getFileList' />",
					type : 'POST',
					data : JSON.stringify({
					file_grp_id : cid.file_grp_id
					}),
					contentType : 'application/json;charset=UTF-8',
					dataType : 'json',
					success : function(data) {

						$('#file-list-table').children().remove();
						$('#file-list-table-u').children().remove();

						for (var i = 0; i < data.length; i++) {
							if (data.length == 0) {
								$('#file-list-table').append(
										'<td>첨부파일이 없습니다.</td>');
							} else {
								//번호. 파일명길게, 사이즈, 다운로드우측에 붙이고
								$('#file-list-table').append('<tr>');
								$('#file-list-table').append(
										'<th scope="row">' + (i + 1) + '</th>');
								$('#file-list-table').append(
										'<td>' + data[i].file_nm + '</td>');
								$('#file-list-table')
										.append(
												'<td><i class="bi bi-download" style="cursor: pointer;" onClick="fileDownload(\''
														+ data[i].file_id
														+ ','
														+ data[i].file_ext
														+ ','
														+ data[i].file_nm
														+ '\')"></i></td>');

								$('#file-list-table-u').append('<tr>');
								$('#file-list-table-u').append(
										'<th scope="row">' + (i + 1) + '</th>');
								$('#file-list-table-u').append(
										'<td>' + data[i].file_nm + '</td>');
								$('#file-list-table-u')
										.append(
												'<td><i class="bi bi-download" style="cursor: pointer;" onClick="fileDownload(\''
														+ data[i].file_id
														+ ','
														+ data[i].file_ext
														+ ','
														+ data[i].file_nm
														+ '\')"></i></td>');

							}
						}
						// data refresh true
						// 			if(gb == 'U'){
						// 				datagridFileEdit.setGridData(data, true);
						// 			} else {
						// 				datagridFile.setGridData(data, true);	
						// 			}

					},
					// loading img
					// 		beforeSend:function(){
					// 			datagrid.lockGrid(); 
					// 		},
					// 		// loading img unload
					// 		complete:function(){
					// 			datagrid.lockGrid(false); 
					// 		},
					error : function(xhr, ajaxOptions, thrownError) {
						alert(xhr.status + ' Error');
					}
				});

	}

	function fileDownload(data) {
		var fc = datagrid.getFocusedCell();
		var rowkey = Object.values(fc)[0];
		var cid = datagrid.getRow(rowkey);
		var param = JSON.stringify({

			file_id : cid.file_id,
			file_ext : cid.file_ext,
			file_nm : cid.file_nm
		});

		var param = JSON.stringify({
			file_id : data.split(',')[0],
			file_ext : data.split(',')[1],
			file_nm : data.split(',')[2]
		});

		$.ajax({
			url : "<c:url value='/admin/fileDownload' />",
			type : 'POST',
			contentType : 'application/json; charset=utf-8',
			data : param,
			success : function(data, status, xhr) {
				var filename = xhr.getResponseHeader("X-Filename");
				var blob = new Blob([ data ], {
					type : 'application/octet-stream; charset=utf-8'
				});
				var link = document.createElement('a');
				link.href = window.URL.createObjectURL(blob);
				link.download = filename;
				link.click();
			}
		});

	}
</script>



<style>
#insertPop {
	padding-top: 0px;
}

.note-editable {
	background-color: #fff !important;
}

#noticeTitle {
	height: 30px;
	background-color: #ffffff;
	border: none;
	padding-left: 20px;
	padding-right: 20px;
}

#notice-pop-div {
	padding-left: 0px;
	padding-right: 0px;
}

#noticeContent {
	border: 0px;
}

#file-list-card {
	border: 0px;
}

#noticeTitle {
	border: 0px;
	padding-top: 0px;
	padding-bottom: 0px;
	font-size: x-large;
}

.card {
	box-shadow: none;
}

#insert_pop_td_title {
	padding-right: 0px;
	padding-left: 0px;
}

#insert_pop_td_content {
	padding-right: 0px;
	padding-left: 0px;
}

.filebox .form-control-file {
	display: inline-block;
	height: 40px;
	padding: 0 10px;
	vertical-align: middle;
	border: 1px solid #dddddd;
	width: 78%;
	color: #999999;
	border: none;
	padding-left: 0px;
}

#btn-file-sel-del {
	border-radius: 15%;
	border: 0px;
}

#insert_content_div {
	padding-right: 0px;
	padding-left: 0px;
}

#insert-content-header-div {
	text-align: left;
	padding: 0px;
}

#insert-content-header-div-text {
	text-align: left;
	padding-right: 0px;
	padding-left: 0px;
	padding-bottom: 0px;
}

#insert-content-header-div-btn {
	padding-top: 0px;
	padding-right: 0px;
	padding-bottom: 0px;
}

#notice-content-header-div {
	padding: 0px;
}
</style>




<div class="content-wrap">
	<div class="main">
		<div class="container-fluid">
			<section id="main-content">
				<div class="row">
					<div class="col-lg-12">
						<div class="card">
							<div class="card-title">
								<h3 class="float-left">공지사항</h3>
								<div class="button-list float-right">
									<button type="button" class="btn btn-primary" id="btnSearch">조회</button>
									<button type="button" class="btn btn-primary" id="btnReg">등록</button>
								</div>
							</div>
							<div class="card-body">
								<div class="row search" id="searchRow">
									<div class="col-lg-4">
										<div class="d-flex flex-row">
											<div class="w-30 search_lbl text-right">
												<span class="text-secondary">제목</span>
											</div>
											<div class="w-70">
												<input type='text' class="form-control h-75 w-80"
													id="input_title" />
											</div>
										</div>
									</div>
									<div class="col-lg-4">
										<div class="d-flex flex-row">
											<div class="w-30 search_lbl text-right">
												<span class="text-secondary">작성일</span>
											</div>
											<div class="w-90 d-flex flex-row">
												<input type="text" class="form-control h-75 w-60"
													id="crt_dt" autocomplete="off">
											</div>
										</div>
									</div>
								</div>
								<div id="div_notice"></div>
							</div>
						</div>
					</div>
				</div>
			</section>
		</div>
	</div>
</div>


<!-- 신규 게시물 등록 -->
<div id="insertPop" class="container" style="display: none;">
	<form id="file_sel_form" name="file_sel_form">
		<div class="pt-1" id="insert_content_div">
			<div class="text-center mr-2 col-lg-12 d-flex flex-row"
				id="insert-content-header-div">
				<div class="col-lg-11" id="insert-content-header-div-text">
					<span>게시물 등록</span>
				</div>
				<div class="col-lg-1" id="insert-content-header-div-btn">
					<button type="button" class="btn btn-primary" id="btn-save">저장</button>
				</div>
			</div>
			<table class="table no-border">
				<tr style="border: 0px;">
					<td id="insert_pop_td_title"><input type="text"
						id="titleInput" class="form-control ui-corner-all"
						style="height: 30px;" autocomplete="off"></td>
				</tr>
				<tr style="border: 0px;">
					<td id="insert_pop_td_content"><textarea id="contentInput"></textarea></td>
				</tr>
			</table>
		</div>
		<div id="file-list-div-u" class="table-responsive">
			<table id="file-list-table-u" class="table">
			</table>
		</div>
		<!-- 		<div id="file_list_div_edit"></div> -->
		<button type="button" class="btn btn-primary" id="file_sel_btn">Select
			File</button>
		<br />
		<div id="file_sel_div" class="filebox"></div>
		<div>
			<span id="file_sel_info"></span>
		</div>
	</form>
</div>



<!-- 게시물 조회 -->
<!-- <div id="noticePop" class="container-fluid" style="display: none;"> -->
<!-- 	<div class="col-sm-12 pt-1"> -->
<!-- 		<div class="text-center mr-3 float-right"> -->
<!-- 			<button type="button" class="btn btn-primary" id="btnEdit">수정</button> -->
<!-- 			<button type="button" class="btn btn-outline-secondary" id="btnDelete">삭제</button> -->
<!-- 		</div> -->
<!-- 		<table class="table no-border"> -->
<!-- 			<tr style="border: 0px;"> -->
<!-- 				<td style="padding-left: 5px; padding-right: 0px;"><input type="text" id="noticeTitle" class="form-control ui-corner-all" readonly></td> -->
<!-- 			</tr> -->
<!-- 			<tr style="border: 0px;"> -->
<!-- 				<td style="padding-left: 0px; padding-right: 0px;"><textarea id="noticeContent" class="form-control ui-corner-all" style="background-color: #ffffff;"></textarea></td> -->
<!-- 			</tr> -->
<!-- 		</table> -->
<!-- 		<input type="text" id="gb" style="display: none;"> -->
<!-- 		<div id="file_list_div"></div> -->
<!-- 	</div> -->
<!-- </div> -->


<div id="noticePop" class="container-fluid" style="display: none;">
	<section id="main-content">
		<div class="row">
			<div class="col-lg-12" id="notice-pop-div">
				<div class="col-lg-12 d-flex flex-row"
					id="notice-content-header-div">
					<div class="col-lg-10" id="noticeTitle"></div>
					<div class="col-lg-2">
						<button type="button" class="btn btn-primary" id="btnEdit">수정</button>
						<button type="button" class="btn btn-outline-danger"
							id="btnDelete">삭제</button>
					</div>
				</div>
				<hr />
				<div class="card" id="noticeContent">
					<div id="notice-content" style="height: 100%"></div>
				</div>
				<div class="card" id="file-list-card">
					첨부파일
					<div id="file-list-div" class="table-responsive">
						<table id="file-list-table" class="table">
						</table>
					</div>
				</div>
				<input type="text" id="gb" style="display: none;">
			</div>
		</div>
	</section>
</div>






